// Copyright (c) 2020-2021 ginlo.net GmbH

package eu.ginlo_apps.ginlo.greendao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import eu.ginlo_apps.ginlo.util.StringUtil;
import java.util.Locale;

// KEEP INCLUDES END

public class Channel
        implements java.io.Serializable {

    public static final String TYPE_CHANNEL = "typeChannel";

    public static final String TYPE_SERVICE = "typeService";

    public static final String TYPE_ALL = "typeAll";

    public static final String DHL_SHORT_DESCRIPTION = "DHL Paket";

    private Long mId;

    private String mGuid;

    private String mShortDesc;

    private String mChannelJsonObject;

    private String mFilterJsonObject;

    private String mChecksum;

    private Boolean mIsSubscribed;

    private String mAesKey;

    private String mIv;

    private String mShortLinkText;

    private Boolean mPromotion;

    private String mExternalUrl;

    private String mSearchText;

    private String mCategory;

    private String mCategorySearchOptimized;

    private Boolean mDisableNotification;

    private String mWelcomeText;

    private String mSuggestionText;

    private String mFeedbackContact;

    private Boolean mIsDeleted;

    private String mType;

    // KEEP FIELDS END

    public Channel() {
    }

    public Channel(Long id) {
        this.mId = id;
    }

    public Channel(Long id,
                   String guid,
                   String shortDesc,
                   String channelJsonObject,
                   String filterJsonObject,
                   String checksum,
                   Boolean isSubscribed,
                   String aesKey,
                   String iv,
                   String shortLinkText,
                   Boolean promotion,
                   String externalUrl,
                   String searchText,
                   String category,
                   Boolean disableNotification,
                   String welcomeText,
                   String suggestionText,
                   String feedbackContact,
                   Boolean isDeleted,
                   String type

    ) {
        this.mId = id;
        this.mGuid = guid;
        this.mShortDesc = shortDesc;
        this.mChannelJsonObject = channelJsonObject;
        this.mFilterJsonObject = filterJsonObject;
        this.mChecksum = checksum;
        this.mIsSubscribed = isSubscribed;
        this.mAesKey = aesKey;
        this.mIv = iv;
        this.mShortLinkText = shortLinkText;
        this.mPromotion = promotion;
        this.mExternalUrl = externalUrl;
        this.mSearchText = searchText;
        this.mCategory = category;
        this.mDisableNotification = disableNotification;
        this.mWelcomeText = welcomeText;
        this.mSuggestionText = suggestionText;
        this.mFeedbackContact = feedbackContact;
        this.mIsDeleted = isDeleted;
        this.mType = type;
    }

    public Long getId() {
        return mId;
    }

    public void setId(Long id) {
        this.mId = id;
    }

    public String getGuid() {
        return mGuid;
    }

    public void setGuid(String guid) {
        this.mGuid = guid;
    }

    public String getShortDesc() {
        return mShortDesc;
    }

    public void setShortDesc(String shortDesc) {
        this.mShortDesc = shortDesc;
    }

    public String getChannelJsonObject() {
        return mChannelJsonObject;
    }

    public void setChannelJsonObject(String channelJsonObject) {
        this.mChannelJsonObject = channelJsonObject;
    }

    public String getFilterJsonObject() {
        return mFilterJsonObject;
    }

    public void setFilterJsonObject(String filterJsonObject) {
        this.mFilterJsonObject = filterJsonObject;
    }

    public String getChecksum() {
        return mChecksum;
    }

    public void setChecksum(String checksum) {
        this.mChecksum = checksum;
    }

    public Boolean getIsSubscribed() {
        return mIsSubscribed;
    }

    public void setIsSubscribed(Boolean isSubscribed) {
        this.mIsSubscribed = isSubscribed;
    }

    public String getAesKey() {
        return mAesKey;
    }

    public void setAesKey(String aesKey) {
        this.mAesKey = aesKey;
    }

    public String getIv() {
        return mIv;
    }

    public void setIv(String iv) {
        this.mIv = iv;
    }

    public String getShortLinkText() {
        return mShortLinkText;
    }

    public void setShortLinkText(String shortLinkText) {
        this.mShortLinkText = shortLinkText;
    }

    public Boolean getPromotion() {
        return mPromotion;
    }

    public void setPromotion(Boolean value) {
        this.mPromotion = value;
    }

    public String getExternalUrl() {
        return mExternalUrl;
    }

    public void setExternalUrl(String value) {
        this.mExternalUrl = value;
    }

    public String getSearchText() {
        return mSearchText;
    }

    public void setSearchText(String searchText) {
        this.mSearchText = searchText;
    }

    public String getCategory() {
        return mCategory;
    }

    public void setCategory(String category) {
        this.mCategory = category;
    }

    public Boolean getDisableNotification() {
        return (mDisableNotification == null) ? false : mDisableNotification;
    }

    public void setDisableNotification(Boolean value) {
        this.mDisableNotification = value;
    }

    // KEEP METHODS - put your custom methods here

    public Boolean getIsSubscribedSave() {
        return (mIsSubscribed == null) ? false : mIsSubscribed;
    }

    public String getWelcomeText() {
        return mWelcomeText;
    }

    public void setWelcomeText(String welcomeText) {
        this.mWelcomeText = welcomeText;
    }

    public String getSuggestionText() {
        return mSuggestionText;
    }

    public void setSuggestionText(String suggestionText) {
        this.mSuggestionText = suggestionText;
    }

    public String getFeedbackContact() {
        return mFeedbackContact;
    }

    public void setFeedbackContact(String feedbackContact) {
        this.mFeedbackContact = feedbackContact;
    }

    public Boolean getIsDeleted() {
        return mIsDeleted == null ? false : mIsDeleted;
    }

    public void setIsDeleted(Boolean isDeleted) {
        this.mIsDeleted = isDeleted;
    }

    public String getType() {
        return mType;
    }

    public void setType(String type) {
        this.mType = type;
    }

    public String getDescription() {
        if (StringUtil.isNullOrEmpty(mChannelJsonObject)) {
            return null;
        }

        JsonElement jse = new JsonParser().parse(mChannelJsonObject);

        if (!jse.isJsonObject()) {
            return null;
        }

        JsonObject jso = jse.getAsJsonObject();

        jso = jso.get("Channel").getAsJsonObject();
        JsonElement element = jso.get("desc");

        if (element == null) {
            return null;
        }
        return element.getAsString();
    }

    public boolean isCategory(String category) {
        if (StringUtil.isNullOrEmpty(mChannelJsonObject)) {
            return false;
        }

        JsonElement jse = new JsonParser().parse(mChannelJsonObject);

        if (!jse.isJsonObject()) {
            return false;
        }

        JsonObject jso = jse.getAsJsonObject();

        jso = jso.get("Channel").getAsJsonObject();
        if (jso.has("@categories")) {
            JsonArray jsa = jso.getAsJsonArray("@categories");

            if (jsa == null) {
                return false;
            }
            for (int i = 0; i < jsa.size(); i++) {
                JsonObject cat = jsa.get(i).getAsJsonObject();

                if ((cat.get("ident") != null) && StringUtil.isEqual(cat.get("ident").getAsString(), category)) {
                    return true;
                }
            }
            return false;
        }
        return false;
    }

    public boolean findString(String query) {
        String lowerQuery = query.toLowerCase(Locale.US).trim();

        if ((mShortDesc != null) && mShortDesc.toLowerCase(Locale.US).contains(lowerQuery)) {
            return true;
        }

        if ((mSearchText != null) && mSearchText.toLowerCase(Locale.US).contains(lowerQuery)) {
            return true;
        }

        if (mCategorySearchOptimized == null) {
            mCategorySearchOptimized = "";

            StringBuilder stringBuilder = new StringBuilder(mCategorySearchOptimized);

            if (mCategory != null) {
                JsonElement jse = new JsonParser().parse(mCategory);

                if (!jse.isJsonObject()) {
                    return false;
                }

                JsonObject jso = jse.getAsJsonObject();

                jso = jso.get("Channel").getAsJsonObject();
                if (jso.has("@promotionCategories")) {
                    JsonArray jsa = jso.getAsJsonArray("@promotionCategories");

                    if (jsa == null) {
                        return false;
                    }
                    for (int i = 0; i < jsa.size(); i++) {
                        JsonObject cat = jsa.get(i).getAsJsonObject();

                        if (cat.get("category") != null) {
                            stringBuilder.append(" ");
                            stringBuilder.append(cat.get("category"));
                        }
                    }
                }
            }
        }

        return (mCategorySearchOptimized != null) && mCategorySearchOptimized.toLowerCase(Locale.US).contains(lowerQuery);
    }
    // KEEP METHODS END
}
