// Copyright (c) 2020-2022 ginlo.net GmbH

package eu.ginlo_apps.ginlo.greendao;

import eu.ginlo_apps.ginlo.exception.LocalizedException;
import eu.ginlo_apps.ginlo.greendao.AbstractSecureModel;
import eu.ginlo_apps.ginlo.greendao.GreenDAOSecurityLayer;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

/**
 * Entity mapped to table PRODUCT.
 */
public class Product
        extends AbstractSecureModel
        implements java.io.Serializable {

    private Long mId;

    private String mProductId;

    private String mPrice;

    private byte[] mEncryptedData;

    private byte[] mIv;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Product() {
    }

    public Product(Long id) {
        this.mId = id;
    }

    public Product(Long id,
                   String productId,
                   String price,
                   byte[] encryptedData,
                   byte[] iv) {
        this.mId = id;
        this.mProductId = productId;
        this.mPrice = price;

        if (encryptedData != null) {
            this.mEncryptedData = encryptedData;
        }
        if (iv != null) {
            this.mIv = iv;
        }
    }

    public Long getId() {
        return mId;
    }

    public void setId(Long id) {
        this.mId = id;
    }

    public String getProductId() {
        return mProductId;
    }

    public void setProductId(String productId) {
        this.mProductId = productId;
    }

    public String getPrice() {
        return mPrice;
    }

    public void setPrice(String price) {
        this.mPrice = price;
    }

    public byte[] getEncryptedData() {
        if (mEncryptedData != null) {
            return mEncryptedData.clone();
        } else {
            return null;
        }
    }

    public void setEncryptedData(byte[] encryptedData) {
        if (encryptedData != null) {
            this.mEncryptedData = encryptedData.clone();
        }
    }

    public byte[] getIv() {
        if (mIv != null) {
            return mIv.clone();
        } else {
            return null;
        }
    }

    public void setIv(byte[] iv) {
        if (iv != null) {
            this.mIv = iv.clone();
        }
    }

    // KEEP METHODS - put your custom methods here

    /**
     * @throws LocalizedException [!EXC_DESCRIPTION!]
     */
    public Boolean getIsPurchased()
            throws LocalizedException {
        synchronized (this) {
            return (Boolean) GreenDAOSecurityLayer.getInstance().get(this, "isPurchased");
        }
    }

    /**
     * @throws LocalizedException [!EXC_DESCRIPTION!]
     */
    public void setIsPurchased(boolean isPurchased)
            throws LocalizedException {
        synchronized (this) {
            GreenDAOSecurityLayer.getInstance().set(this, "isPurchased", isPurchased);
        }
    }

    /**
     * @throws LocalizedException [!EXC_DESCRIPTION!]
     */
    public String getIdent()
            throws LocalizedException {
        synchronized (this) {
            return (String) GreenDAOSecurityLayer.getInstance().get(this, "ident");
        }
    }

    /**
     * @throws LocalizedException [!EXC_DESCRIPTION!]
     */
    public void setIdent(String ident)
            throws LocalizedException {
        synchronized (this) {
            GreenDAOSecurityLayer.getInstance().set(this, "ident", ident);
        }
    }

    /**
     * @throws LocalizedException [!EXC_DESCRIPTION!]
     */
    public String getFeature()
            throws LocalizedException {
        synchronized (this) {
            return (String) GreenDAOSecurityLayer.getInstance().get(this, "feature");
        }
    }

    /**
     * @throws LocalizedException [!EXC_DESCRIPTION!]
     */
    public void setFeature(String feature)
            throws LocalizedException {
        synchronized (this) {
            GreenDAOSecurityLayer.getInstance().set(this, "feature", feature);
        }
    }
    // KEEP METHODS END
}
